FROM registry.access.redhat.com/ubi8/ubi:8.5


ARG OPENJ9_SCC=false
ARG VERBOSE=false


RUN set -eu; \
    dnf install -y \
# CRIU dependencies
       iptables-libs jansson libibverbs libmnl libnet libnftnl libpcap nftables protobuf-c \
# Semeru dependencies
       tzdata openssl curl ca-certificates fontconfig glibc-langpack-en tar; \
    dnf clean all; \
    useradd -u 1001 -r -g 0 -s /usr/sbin/nologin default;


# TODO set the java version correctly
ENV JAVA_VERSION jdk-11.0.15-ea+6

ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'

# Requirements to install Java

# TODO set the URLs for each arch
 RUN set -eux; \
    ARCH="$(uname -m)"; \
    case "${ARCH}" in \
       aarch64|arm64) \
         ESUM='junk'; \
         BINARY_URL='junk'; \
         ;; \
       ppc64el|ppc64le) \
         ESUM='junk'; \
         BINARY_URL='junk'; \
         ;; \
       s390x) \
         ESUM='junk'; \
         BINARY_URL='junk'; \
         ;; \
       amd64|x86_64) \
         ESUM='0069bb7463e8463f4aeb27d8907523e217e41c7be6ec951647f7e271e845dd58'; \
         BINARY_URL='https://openj9-artifactory.osuosl.org/artifactory/ci-openj9/Build_JDK11_x86-64_linux_criu_Nightly/75/OpenJ9-JDK11-x86-64_linux_criu-20220721-005733.tar.gz'; \
         ;; \
       *) \
         echo "Unsupported arch: ${ARCH}"; \
         exit 1; \
         ;; \
    esac; \
    curl -LfsSo /tmp/openjdk.tar.xz ${BINARY_URL}; \
    echo "${ESUM} */tmp/openjdk.tar.xz" | sha256sum -c -; \
# TODO temporary to create jre until EA build is available
    mkdir /tmp/jdk-extract; \
    cd /tmp/jdk-extract; \
    tar -xf /tmp/openjdk.tar.xz --strip-components=1; \
    ./bin/jlink --no-header-files --no-man-pages --compress=2 --add-modules java.base,java.compiler,java.datatransfer,java.desktop,java.instrument,java.logging,java.management,java.management.rmi,java.naming,java.net.http,java.prefs,java.rmi,java.scripting,java.se,java.security.jgss,java.security.sasl,java.smartcardio,java.sql,java.sql.rowset,java.transaction.xa,java.xml,java.xml.crypto,jdk.accessibility,jdk.attach,jdk.charsets,jdk.compiler,jdk.crypto.cryptoki,jdk.crypto.ec,jdk.dynalink,jdk.editpad,jdk.httpserver,jdk.internal.ed,jdk.internal.jvmstat,jdk.internal.le,jdk.internal.opt,jdk.jartool,jdk.javadoc,jdk.jcmd,jdk.jconsole,jdk.jdeps,jdk.jdi,jdk.jdwp.agent,jdk.jlink,jdk.jshell,jdk.jsobject,jdk.localedata,jdk.management,jdk.management.agent,jdk.naming.dns,jdk.naming.ldap,jdk.naming.rmi,jdk.net,jdk.pack,jdk.rmic,jdk.scripting.nashorn,jdk.scripting.nashorn.shell,jdk.sctp,jdk.security.auth,jdk.security.jgss,jdk.unsupported,jdk.unsupported.desktop,jdk.xml.dom,jdk.zipfs,openj9.criu,openj9.cuda,openj9.dataaccess,openj9.dtfj,openj9.dtfjview,openj9.gpu,openj9.jvm,openj9.sharedclasses,openj9.traceformat,openj9.zosconditionhandling --output /opt/java/openjdk; \
    rm -rf /tmp/jdk-extract; \
#    mkdir -p /opt/java/openjdk; \
#    cd /opt/java/openjdk; \
#    tar -xf /tmp/openjdk.tar.xz --strip-components=1; \
    rm -rf /tmp/openjdk.tar.xz;

ENV JAVA_HOME=/opt/java/openjdk \
    PATH="/opt/java/openjdk/bin:$PATH"
ENV JAVA_TOOL_OPTIONS="-XX:+IgnoreUnrecognizedVMOptions -XX:+IdleTuningGcOnIdle"



#These settings are needed so that we can run as a different user than 1001 after server warmup
ENV RANDFILE=/tmp/.rnd \
    OPENJ9_JAVA_OPTIONS="-XX:+IgnoreUnrecognizedVMOptions -XX:+IdleTuningGcOnIdle -Dosgi.checkConfiguration=false"

COPY criu/x86_64/criu /usr/sbin/criu
COPY criu/x86_64/libcriu.so /usr/lib64/libcriu.so.2.0

RUN set -eu; \
    chmod a+x /usr/sbin/criu; \
    setcap cap_checkpoint_restore,cap_net_admin,cap_sys_ptrace=eip /usr/sbin/criu; \
    cd /usr/lib64; \
    ln -s libcriu.so.2.0 libcriu.so; \
    ln -s libcriu.so.2.0 libcriu.so.2; \
    cd /; \
    if [ ! -d "/opt/java/.scc" ]; then \
      mkdir /opt/java/.scc; \
      chmod -R 0777 /opt/java/.scc; \
    fi;


EXPOSE 9080 9443


CMD ["criu -V"]

